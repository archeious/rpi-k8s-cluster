---
- name: Setup CLuster
  hosts: rpicluster
  remote_user: jeff
  become: true

  tasks:
    - name: Ensure "jeff" users account is present
      user: name=jeff shell=/bin/bash groups=sudo state=present

    - name: Install Basic Packages
      apt:
        pkg:
          - curl
          - docker.io
          - ethtool
          - htop
          - iotop
          - jq 
          - socat
          - vim 
        state: latest
        update_cache: true

    - name: Get latest Kubernetes version
      uri: url="https://dl.k8s.io/release/stable.txt" return_content=yes
      register: k8s_version

    - name: Get kubectl checksum
      uri: url="https://dl.k8s.io/{{ k8s_version.content }}/bin/linux/arm64/kubectl.sha256" return_content=yes
      register: kubectl_sha256

    - name: Download kubectl
      get_url:
        checksum: sha256:{{ kubectl_sha256.content }}
        dest: /usr/local/bin/
        group: root
        mode: 0755
        owner: root
        url: https://dl.k8s.io/release/{{ k8s_version.content }}/bin/linux/arm64/kubectl

    - name: Get kubeadm checksum
      uri: url="https://dl.k8s.io/{{ k8s_version.content }}/bin/linux/arm64/kubeadm.sha256" return_content=yes
      register: kubeadm_sha256

    - name: Download kubeadm
      get_url:
        checksum: sha256:{{ kubeadm_sha256.content }}
        dest: /usr/local/bin/
        group: root
        mode: 0755
        owner: root
        url: https://dl.k8s.io/release/{{ k8s_version.content }}/bin/linux/arm64/kubeadm

    - name: Get kubelet checksum
      uri: url="https://dl.k8s.io/{{ k8s_version.content }}/bin/linux/arm64/kubelet.sha256" return_content=yes
      register: kubelet_sha256

    - name: Download kubelet
      get_url:
        checksum: sha256:{{ kubelet_sha256.content }}
        dest: /usr/local/bin/
        group: root
        mode: 0755
        owner: root
        url: https://dl.k8s.io/release/{{ k8s_version.content }}/bin/linux/arm64/kubelet

    - name: k8s Kernel Modules
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
                 br_netfilter
                 overlay

    - name: Ensure Bridging in Enabled
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
    - name: Ensure Bridging is Enabled in sysctl after reboot
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
                 net.bridge.bridge-nf-call-ip6tables = 1
                 net.bridge.bridge-nf-call-iptables  = 1
                 net.ipv4.ip_forward                 = 1

    - name: Create kubeadmn config file
      copy:
        dest: /tmp/kubeadm-config.yaml
        content: |
                 kind: ClusterConfiguration
                 apiVersion: kubeadm.k8s.io/v1beta2
                 kubernetesVersion: v1.21.0
                 ---
                 kind: KubeletConfiguration
                 apiVersion: kubelet.config.k8s.io/v1beta1
                 cgroupDriver: systemd
